"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more informações sobre este arquivo, veja:
https://docs.djangoproject.com/en/5.2/topics/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Carrega variáveis do arquivo .env
load_dotenv()

# Caminho base do projeto
BASE_DIR = Path(__file__).resolve().parent.parent

# Configurações de segurança
SECRET_KEY = os.getenv("SECRET_KEY", "default-secret-key")
DEBUG = os.getenv("DEBUG", "True") == "True"
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "").split(",")

# Definição dos bancos de dados
DATABASE_ROUTERS = ['core.routers.EscolaRouter', 'core.routers.WebScrapingRouter']
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'config_escola': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_ESCOLA_NAME'),
        'USER': os.getenv('DB_ESCOLA_USER'),
        'PASSWORD': os.getenv('DB_ESCOLA_PASSWORD'),
        'HOST': os.getenv('DB_ESCOLA_HOST'),
        'PORT': os.getenv('DB_ESCOLA_PORT'),
    },
    'config_scraping': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_SCRAPING_NAME'),
        'USER': os.getenv('DB_SCRAPING_USER'),
        'PASSWORD': os.getenv('DB_SCRAPING_PASSWORD'),
        'HOST': os.getenv('DB_SCRAPING_HOST'),
        'PORT': os.getenv('DB_SCRAPING_PORT'),
    }
}

# Aplicações instaladas
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "administracao",
    "webScraping"
]

# Middleware padrão do Django
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

# Configurações de templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# Validações de senha
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Configurações de internacionalização
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Configuração de arquivos estáticos
STATIC_URL = 'static/'

# Tipo padrão de chave primária
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
